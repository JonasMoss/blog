{
  "hash": "cf5abc5a429138a6c06d2be7e0aa4876",
  "result": {
    "markdown": "---\ntitle: \"Estimating value from pairwise comparisons\"\nauthor: \"Jonas Moss\"\nformat: html\neditor: visual\ncache: true\ndate: \"10/5/2022\"\nfreeze: auto  # re-render only when source changes\ndate-format: \"MMM D, YYYY\"\ncategories: [effective altruism, statistics, psychometrics]\n---\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-1_28f9ca0a4a67aa3389df1365719dd6bf'}\n\n:::\n\n\nHow can you estimate the value of research output? You could use pairwise comparisons, e.g., to ask specialists how much more valuable Darwin's *The Original of Species* is than Dembski's [*Intelligent Design*](https://en.wikipedia.org/wiki/Intelligent_Design_(book)). Then you can use these relative valuations to estimate absolute valuations.\n\n## Summary\n\n1.  Estimating values is hard. One way to elicit value estimates is ask researchers to compare two different items $A$ and $B$, asking how much better $A$ is than $B$. This makes the problem more concrete than just asking \"what is the value of $A$?\". The Quantified Uncertainty Institute has made an app for doing this kind of thing, described [here](https://forum.effectivealtruism.org/posts/9hQFfmbEiAoodstDA/simple-comparison-polling-to-create-utility-functions).\n\n2.  Nu単o Sempere had a [post](https://forum.effectivealtruism.org/posts/hrdxf5qdKmCZNWTvs/valuing-research-works-by-eliciting-comparisons-from-ea) about eliciting comparisons of research value from $6$ effective altruism researchers. [This is](https://forum.effectivealtruism.org/posts/EPhDMkovGquHtFq3h/an-experiment-eliciting-relative-estimates-for-open) a more recent post about AI risk, but it uses distributions instead of point estimates.\n\n3.  This post proposes some technical solutions to problems introduced to me in Nu単o's post. In particular, it includes principled ways to\n\n    1.  estimate subjective values,\n\n    2.  measure consistency in pairwise value judgments,\n\n    3.  measure agreement between the raters,\n\n    4.  aggregate subjective values.\n\n    5.  I also propose to use weighted least squares when the raters supply distributions instead of numbers. It is not clear to me it is worth it to ask for distributions in these kinds of questions though, as your uncertainty level can be modelled implicitly by comparing different pairwise comparisons.\n\n4.  I use these methods on the [data from the 6 researchers post](https://forum.effectivealtruism.org/posts/hrdxf5qdKmCZNWTvs/valuing-research-works-by-eliciting-comparisons-from-ea).\n\nI'm assuming you have read the 6 researchers post recently. I think this post will be hard to read if you haven't.\n\n***Note:*** This document is a compiled Quarto file with source functions outside of the main document. The functions can be found in the [source folder](https://github.com/JonasMoss/blog/blob/main/posts/value-estimation/) for this post. Also, thanks to Nu単o Sempere for his comments on a draft of the post! *Update 6/10/2022.* Modified Gavin's confidence interval for *A Mathematical Theory* to show the correct number. \\### What's this about\n\n[@tbl-gavin-6] contains the first $6$ out of $36$ responses from Gavin Leech. As you can see, he values Superintelligence $100$ more than the [Global Priorities Institute's Research Agenda](https://globalprioritiesinstitute.org/research-agenda-web-version/).\n\n\n::: {#tbl-gavin-6 .cell tbl-cap='First 6 questions Gavin answered.' hash='value-estimation_cache/html/tbl-gavin-6_c389f29b6e2f9bb112c24fdea3d77370'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"A list of questions in the data set.\"}\nknitr::kable(head(gavin[, 1:3]))\n```\n\n::: {.cell-output-display}\n|source                                            |target                                                 |distance |\n|:-------------------------------------------------|:------------------------------------------------------|:--------|\n|Thinking Fast and Slow                            |The Global Priorities Institute's Research Agenda      |100      |\n|The Global Priorities Institute's Research Agenda |The Mathematical Theory of Communication               |1000     |\n|Superintelligence                                 |The Mathematical Theory of Communication               |10       |\n|Categorizing Variants of Goodhart's Law           |The Vulnerable World Hypothesis                        |10       |\n|Shallow evaluations of longtermist organizations  |The motivated reasoning critique of effective altruism |10       |\n|Shallow evaluations of longtermist organizations  |Categorizing Variants of Goodhart's Law                |100      |\n:::\n:::\n\n\nMy first goal is to take relative value judgments such these and use them to estimate the true subjective values. In this case, I want to estimate the value that Gavin Leech places on every article in the data set, as contained in [@tbl-questions].\n\n\n::: {#tbl-questions .cell tbl-cap='All $15$ articles valuated in the data set. Question $3$ is fixed to $1$.' hash='value-estimation_cache/html/tbl-questions_0df214575ce124f25707fca4e6e5e92b'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"A list of questions in the data set.\"}\nlevels <- levels(as.factor(c(gavin$source, gavin$target)))\nknitr::kable(cbind(1:15, levels))\n```\n\n::: {.cell-output-display}\n|   |levels                                                                                              |\n|:--|:---------------------------------------------------------------------------------------------------|\n|1  |A comment on setting up a charity                                                                   |\n|2  |A Model of Patient Spending and Movement Building                                                   |\n|3  |Categorizing Variants of Goodhart's Law                                                             |\n|4  |Center for Election Science EA Wiki stub                                                            |\n|5  |Database of orgs relevant to longtermist/x-risk work                                                |\n|6  |Extinguishing or preventing coal seam fires is a potential cause area                               |\n|7  |Reversals in Psychology                                                                             |\n|8  |Shallow evaluations of longtermist organizations                                                    |\n|9  |Superintelligence                                                                                   |\n|10 |The Global Priorities Institute's Research Agenda                                                   |\n|11 |The Mathematical Theory of Communication                                                            |\n|12 |The motivated reasoning critique of effective altruism                                              |\n|13 |The Vulnerable World Hypothesis                                                                     |\n|14 |Thinking Fast and Slow                                                                              |\n|15 |What are some low-information priors that you find practically useful for thinking about the world? |\n:::\n:::\n\n\nThe article *Categorizing Variants of Goodhart's Law* has value fixed to $1$. I will use the numbering above throughout this post.\n\n## A model with multiplicative error terms\n\n### Motivation and setup\n\nLet $\\eta_i$ be the true subjective value of item $i$, counting starting from $1$. We will let $\\eta_3=1$ in our setup, as Manheim and Garabrant's [*Categorizing Variants of Goodhart's Law*](https://arxiv.org/abs/1803.04585) was fixed to $1$ in Nu単o's study, but we could have fixed any other item if we wanted to. Ideally, we would have observed the \"distances\" $d_{ij}=\\eta_i/\\eta_j$ directly, but we don't. Instead, we observe the distances with noise, $\\hat{d}_{ij}$. We'll assume a multiplicative model for these noise measurements:\n\n\n$$\n\\hat{d}_{ij} = \\frac{\\eta_i}{\\eta_j}\\cdot e^{\\sigma \\epsilon_{ij}},\n$$ where $e^{\\sigma \\epsilon_{ij}}$ is a positive noise term with standard deviation $\\sigma$ on the log-scale. Now define $Y_{ij} = \\log \\hat{d}_{ij}$ and $\\beta_i = \\log \\eta_i$. Observe that $\\beta_3 = 0$ by assumption. Now take logarimths on both sides of the equation above to get\n\n$$\nY_{ij} = \\beta_i - \\beta_j + \\sigma\\epsilon_{ij},\n$$\n\n\nwhich is a linear regression model. It looks like a [two-way analysis of variance](https://en.wikipedia.org/wiki/Two-way_analysis_of_variance), but isn't quite that, as we are only dealing with one factor here (the evaluated research) which appears twice in each equation. That said, the only difficulty in estimating this model is to make a model matrix for the regression coefficients. Observe that the residual standard deviation is fixed across items. We'll take a look at how to reasonably relax this later on.\n\n### Incidence matrices\n\nThe questions Gavin answered in the table above can be understood as a directed graph; I'll call it the *question graph*. [@fig-graph] below contains Gavin's question graph.\n\n\n::: {.cell hash='value-estimation_cache/html/fig-graph_f6139e4492100c40d1b975b6a4929b82'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plotting question graph for Gavin.\"}\nlevels <- levels(as.factor(c(gavin$source, gavin$target)))\nsource <- as.numeric(factor(gavin$source, levels = levels))\ntarget <- as.numeric(factor(gavin$target, levels = levels))\ngraph <- igraph::graph_from_edgelist(cbind(source, target))\nplot(graph)\n```\n\n::: {.cell-output-display}\n![Question graph for Gavin.](value-estimation_files/figure-html/fig-graph-1.png){#fig-graph width=672}\n:::\n:::\n\n\nDirected graphs can be defined by their [incidence matrices](https://en.wikipedia.org/wiki/Incidence_matrix#Undirected_and_directed_graphs). If $G$ is a directed graph with $k$ nodes and $n$ edges its incidence matrix $B$ is the $n\\times k$ matrix with elements $$B_{ij}=\\begin{cases}\n-1 & \\text{if edge }e_{j}\\text{ leaves vertex }v_{i},\\\\\n1 & \\text{if edge }e_{j}\\text{ enters vertex }v_{i},\\\\\n0 & \\text{otherwise.}\n\\end{cases}$$\n\n[@tbl-incidence] contains Gavin's incidence matrix.\n\n\n::: {#tbl-incidence .cell tbl-cap='Incidence matrix for Gavin.' hash='value-estimation_cache/html/tbl-incidence_8c24310843db5c07f97ed5c07945e030'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Calculation of incidence matrix for Gavin.\"}\nn <- nrow(gavin)\nk <- 15\nb <- matrix(data = 0, nrow = n, ncol = k)\n\nfor (i in seq(n)) {\n  b[i, source[i]] <- -1\n  b[i, target[i]] <- 1\n}\n\nknitr::kable(t(b))\n```\n\n::: {.cell-output-display}\n|   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |   |\n|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|--:|\n|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1| -1|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  1|  1|  0|  0|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  1|  1|  1| -1|  0|  0|  0|\n|  0|  0|  0| -1|  0|  1|  1|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  1|  0|  0|\n|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1|  1|  0| -1|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1|  1| -1|  0|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  1|  1|  1|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1|  0|  0|\n|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1|  0| -1|  0|  0|  0|  0|  1|  1| -1|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n|  0|  0|  0|  0| -1| -1|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  1|  1|  1|  0|  1| -1|  0|  0|  0|  0|  0|  0|\n|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|\n|  1| -1|  0|  0|  0|  0|  0|  0|  0|  1|  1|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1|\n|  0|  1|  1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  1|  0|\n|  0|  0|  0|  0|  1|  0| -1|  0|  1| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|\n|  0|  0|  0|  1|  0|  0|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|\n| -1|  0|  0|  0|  0|  0|  0|  1| -1|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0| -1|  0|  0| -1|  0|  0|  0| -1|  0|\n|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  0|  1|  0|  0| -1|  0|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0| -1|  0|  0|  0|  0|  0|  0|  0|\n:::\n:::\n\n\nNow we can verify that $$Y = B^T\\beta + \\sigma \\epsilon.$$ But there is one more thing to handle: We need to remove the fixed $\\beta$, in our case $\\beta_3$, to estimate the model. Define $B_\\star$ and $\\beta_\\star$ as the incidence matrix and coefficient vector with the fixed item removed. Then $Y = B_\\star^T\\beta_\\star + \\sigma \\epsilon$ is ready to be estimated using linear regression.\n\n### Example\n\nWe fit a linear regression to Gavin's data. [@tbl-gavin-params] contains the resulting estimates on the log-scale, rounded to the nearest whole number.\n\n\n::: {#tbl-gavin-params .cell tbl-cap='Parameter estimates for Gavin.' hash='value-estimation_cache/html/tbl-gavin-params_ff580e0132f2def4595f5e3c2586dac5'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Parameter estimates for Gavin.\"}\nmod <- pairwise_model(gavin, fixed = 3, keep_names = FALSE)\nvals <- round(c(coef(mod)[1:2], q3 = 0, coef(mod)[3:14]))\nknitr::kable(t(vals))\n```\n\n::: {.cell-output-display}\n|  q1| q2| q3|  q4| q5| q6| q7| q8| q9| q10| q11| q12| q13| q14| q15|\n|---:|--:|--:|---:|--:|--:|--:|--:|--:|---:|---:|---:|---:|---:|---:|\n| -12| -3|  0| -10| -8| -5| -7| -4|  7|   3|   8|  -3|   1|  -4|  -6|\n:::\n:::\n\n\nWe can also make confidence intervals for the questions using the `confint` function. [@fig-gavin-confint] plots confidence intervals for all the $\\beta$s along with their estimates $\\hat{\\beta}$.\n\n\n::: {.cell hash='value-estimation_cache/html/fig-gavin-confint_2f7ee180f931ae1f2067bc92f76a4fd4'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Plot of parametes and error bars.\"}\nexped = exp(confint(mod))\nconfints = rbind(exped[1:2, ], c(1, 1), exped[3:14, ])\nrownames(confints) <- 1:15\nparams <- setNames(c(coef(mod)[1:2], 1, coef(mod)[3:14]), 1:15)\n\nHmisc::errbar(x = 1:15, y = exp(params), yplus = confints[, 2], yminus = confints[, 1],\n              log = \"y\", ylab = \"Value\", xlab = \"Question index\", type = \"b\")\ngrid()\nHmisc::errbar(x = 1:15, y = exp(params), yplus = confints[, 2], yminus = confints[, 1],\n              add = TRUE)\n```\n\n::: {.cell-output-display}\n![Plot of parametes and error bars for Gavin.](value-estimation_files/figure-html/fig-gavin-confint-1.png){#fig-gavin-confint width=672}\n:::\n:::\n\n\nThe $95\\%$ confidence intervals are approximately equally wide on the log-scale, with the exception of question 3, which is fixed to $1$. Let's take a look at question 11, that of [Shannon's A Mathematical Theory of Communication](https://en.wikipedia.org/wiki/A_Mathematical_Theory_of_Communication). The confidence interval is\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-8_8ac09cac2ae22e19bcb2272ba4ef796c'}\n\n```{.r .cell-code}\nconfints[11, ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      2.5 %      97.5 % \n   135.4981 150222.4654 \n```\n:::\n:::\n\n\nThat's *really* wide!\n\n### All the raters\n\nThe raters have IDs given in this table.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-9_07150c122c893a1cea1d331b491e4846'}\n\n```{.r .cell-code}\nx <- setNames(1:6, names(data_list))\nknitr::kable(t(x))\n```\n\n::: {.cell-output-display}\n| linch| finn| gavin| jamie| misha| ozzie|\n|-----:|----:|-----:|-----:|-----:|-----:|\n|     1|    2|     3|     4|     5|     6|\n:::\n:::\n\n\nWe fit the model for all the raters and plot the resulting estimates in [@fig-estimates]. Notice the log-scale.\n\n\n::: {.cell hash='value-estimation_cache/html/fig-estimates_00571793e186746f191147433261cbb7'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Function for plotting results for all raters.\"}\nparameters = sapply(\n  data_list,\n  \\(data) {\n    coefs <- exp(coef(pairwise_model(data)))\n    c(coefs[1:2], 1, coefs[3:14])\n  })\nmatplot(parameters, log = \"y\", type = \"b\", ylab = \"Values\")\n```\n\n::: {.cell-output-display}\n![Plot of parametes estimates for all raters.](value-estimation_files/figure-html/fig-estimates-1.png){#fig-estimates width=672}\n:::\n:::\n\n\nIt seems that the raters agree quite a bit.\n\n## Measuring agreement\n\nOne of the easiest and most popular ways to measure agreement among two raters is Lin's concordance coefficient (aka quadratically weighted Cohen's kappa). It has an unpublished multirater generalization $$\\frac{1^{T}\\Sigma1-\\text{tr}\\Sigma}{(R-1)\\text{tr}\\Sigma+R^{2}\\left(\\overline{\\mu^{2}}-\\overline{\\mu}^{2}\\right)}$$ Where $\\Sigma$ is the covariance matrix of the estimated log rating, $\\mu_i$ is the mean log rating by the $i$th rater, and $R$ is the number of raters. I can explain the reasoning behind this measure in more detail if you want, but it's the essentially unique extension of Lin's concordance coefficient to multiple raters, as several generalizations yield the same formula. It's bounded above by $1$, which signifies perfect agreement. It's defined in a way that's very similar to the $R^2$, so it's OK to interpret the numbers as you would have interpreted an $R^2$.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-11_a1a4c6d7a704858201530f64c13939c7'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Calculate concordance of the parameters.\"}\nconcordance = function(x) {\n  n = nrow(x)\n  r = ncol(x)\n  sigma = cov(x) * (n - 1) / n\n  mu = colMeans(x)\n  trace = sum(diag(sigma))\n  top = sum(sigma) - trace\n  bottom = (r - 1) * trace + r ^ 2 * (mean(mu^2) - mean(mu)^2)\n  top / bottom\n}\nconcordance(log(parameters))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.698547\n```\n:::\n:::\n\n\nI'm impressed by the level of agreement among the raters.\n\nWe can also construct a matrix of pairwise agreements.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-12_c34ccda0369c20b8d51868c11c240a70'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Defines the concordanc matrix using Lin's coefficient.\"}\nconcordances <- outer(seq(6), seq(6), Vectorize(\\(i,j) concordance(\n  cbind(log(parameters)[, i], log(parameters)[, j]))))\ncolnames(concordances) <- names(x)\nrownames(concordances) <- names(x)\nconcordances\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          linch      finn     gavin     jamie     misha     ozzie\nlinch 1.0000000 0.5442018 0.7562977 0.7705449 0.7779404 0.7016672\nfinn  0.5442018 1.0000000 0.4031429 0.5385316 0.4685602 0.5985986\ngavin 0.7562977 0.4031429 1.0000000 0.7237382 0.9106108 0.5996458\njamie 0.7705449 0.5385316 0.7237382 1.0000000 0.8253265 0.8926464\nmisha 0.7779404 0.4685602 0.9106108 0.8253265 1.0000000 0.7804517\nozzie 0.7016672 0.5985986 0.5996458 0.8926464 0.7804517 1.0000000\n```\n:::\n:::\n\n\nNow we notice, e.g., that (i) Gavin agrees with Misha, (ii) Finn doesn't agree much with anyone, (iii) Ozzie agrees with Jamie.\n\n## Identification of the parameters\n\nThe parameters $\\beta_\\star$ are identified if and only if the question graph is connected. This has the practical consequence that the estimation is guaranteed to work whenever you design the question graph *well enough*. For instance, you do not need to think about avoiding cycles, having only one question per pair, etc.\n\nNow, it should be intuitively clear that $\\beta_\\star$ cannot be identified when the graph fails to be connected, as there is no point(s) anchoring the scale of every $\\beta$. Think about it this way. Suppose $\\beta_{1},\\beta_{2},\\beta_{4}$ form a connected component disconnected from $\\beta_{3}$. If $\\beta_{1},\\beta_{2},\\beta_{4}$ satisfy $Y=B_{[1,2,4]}^{T}\\beta_{[1,2,4]}+\\sigma\\epsilon$, where $[1,2,3]$ denotes the appropriate indexing, then surely $\\gamma_{i}=\\beta_{i}+c$ does so too for any $c$, as every row of $B_\\star^{T}\\beta$ is a difference $\\beta_{i}-\\beta_{j}$, hence $\\gamma_{i}-\\gamma_{j}=\\beta_{i}+c-(\\beta_{j}+c)=\\beta_{i}-\\beta_{j}$. The other way around is slightly trickier. It's a theorem of algebraic graph theory that the rank of $B$ equals $k-c$, where $c$ is the number of connected components. Suppose the graph is connected, so that the rank of $B$ is $k-1$. Since $B$ does not have full rank (i.e., $k$), every row can be written as a linear combination of two other rows. In particular, the row associated with the fixed element can be removed without affecting the rank, hence the rank of $B_\\star$ is $k-1$ too. But there are $k-1$ rows in $B_\\star$, hence $B_\\star$ has full rank. It follows that the parameters are identified.\n\n## Measuring inconsistency\n\nRecall the multiplicative equation for the reported distance: $$D_{ij} = \\frac{X_i}{X_j}\\cdot e^{\\sigma \\epsilon_{ij}}$$ It's clear that the distance will be noise-free if and only if $\\sigma = 0$. Moreover, the distances will behave more and more erratically the larger $\\sigma$ gets. If the distances tend to have erratically, the valuations will be inconsistent. Thus it's natural to consider inconsistency estimators that are strictly increasing functions of $\\sigma$. We'll just use $\\sigma$ for simplicity's sake.\n\nThe consistencies of our 6 player are\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-13_437db9c14226e7e6569381b238ab6a34'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Defines the consistencies of all raters.\"}\nconsistencies = lapply(data_list, \\(data) summary(pairwise_model(data))$sigma)\nknitr::kable(tibble::as_tibble(consistencies), digits = 2)\n```\n\n::: {.cell-output-display}\n| linch| finn| gavin| jamie| misha| ozzie|\n|-----:|----:|-----:|-----:|-----:|-----:|\n|  0.87| 1.04|  2.22|  0.86|  0.87|  0.93|\n:::\n:::\n\n\nAll of these are roughly the same, except Gavin's. That might be surprising since Nu単o claimed Gavin is the most consistent of the raters. His inconsistency score is probably unfavourable since he has some serious outliers in his ratings, not because he's inconsistent across the board. Ratings $33$ and $36$ appear to be especially inconsistent.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-14_c642301fc5c1b0bf15058cbbc32becfb'}\n\n```{.r .cell-code}\nplot(mod, which = 1, main = \"Plot for Gavin\")\n```\n\n::: {.cell-output-display}\n![](value-estimation_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nCompared it to the same plot for Jaime Sevilla.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-15_e73cf23c09e5c11ab88d2753ae64ecab'}\n\n```{.r .cell-code}\nplot(pairwise_model(jamie), which = 1, main = \"Plot for Jaime\")\n```\n\n::: {.cell-output-display}\n![](value-estimation_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nLet's see what happens if we remove the observations $31, 33, 34, 36$ from Gavin's data then.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-16_bf79cc012bf67417e77f8a847f992a72'}\n\n```{.r .cell-code}\ngavin_ <- gavin[setdiff(seq(nrow(gavin)), c(31, 33, 34, 36)), ]\nplot(pairwise_model(gavin_), which = 1, main = \"Plot for Gavin with outliers removed\")\n```\n\n::: {.cell-output-display}\n![](value-estimation_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nThe residual plot looks better now, and the inconsistency score becomes $\\sigma \\approx 0.87$, in line with the other participants.\n\nMy take-away is that it would be beneficial to use robust linear regressions when estimating $\\beta$. I'm not prioritizing studying this right now, but if someone were to invest serious amount of time in studying and applying statistical methods for this problem, I would strongly suggest taking a look at e.g. `rlm`.\n\n### You shouldn't strive for consistency\n\nStriving for consistency requires you to follow a method. For instance, you can write down or try hard to remember what you have answered on previous questions, then use the right formula to deduce a consistent answer. I would advice against doing this though. When you compare two items against each other, just follow the priming of the shown items and let the statistical method do its work! If you're trying hard to be consistent you'll probably introduce some sort of bias, as you'll essentially make the ratings dependent on their ordering. Also see [the crowd within](https://en.wikipedia.org/wiki/Wisdom_of_the_crowd#Analogues_with_individual_cognition:_the_%22crowd_within%22). The value-elicitation framework is similar to psychometrics, where you want every measurement to be as independent of every other measurement as possible when you condition on the latent variables.\n\nI also see little reason to use algorithms that prohibits cyclical comparisons, as there is no statistical reason to avoid them. (Only a psychological one, if you feel like you have to be consistent.) It's also fine the ask the same question more than once -- at least if you add some addition correlation term into the model. And have some time distance between the questions.\n\n## Aggregation\n\nWe estimate $\\beta$ using a mixed effect model. \\begin{eqnarray*}\nY_{j} & = & D_{j}^{T}\\beta_{j}+\\sigma\\epsilon,\\\\\n\\beta_{j} & \\sim & N(\\beta,\\Sigma).\n\\end{eqnarray*}\n\nConceptually, this model implies that there is a true underlying $\\beta$ for each question, but the raters only have incomplete access to it when they form their subjective valuation. So we have two sources of noise: First, the raters have a latent, noisy and subjective estimate of $\\beta$, which we call $\\beta_j$. Second, we only observe noisy measurements of $\\beta_j$s through our pairwise comparisons model. The matrix $\\Sigma$ can be constrained to be diagonal, which makes estimation go faster.\n\nUsing `lme4`, I made a function `pairwise_mixed_model` that fits a mixed effects model to the data without an intercept. Check out the source if you want to know exactly what I've done.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-17_8cd92ae6c917035bcf4243c9c48227c8'}\n\n```{.r .cell-code}\nmod <- pairwise_mixed_model(data_list, fixed = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nboundary (singular) fit: see help('isSingular')\n```\n:::\n:::\n\n\nUsing the `mod` object, we can plot ([@fig-conf-uncorrelated]) confidence intervals and estimates for the aggregate ratings.\n\n\n::: {.cell hash='value-estimation_cache/html/fig-conf-uncorrelated_663f8da79edf0de2d6fdb0bde15c3fa2'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Defines confidence intervals and estimates used for plotting.\"}\nconf <- confint(mod, method = \"Wald\")[16:29, ]\nparams <- c(lme4::fixef(mod)[1:2], 0, lme4::fixef(mod)[3:14])\nexped <- rbind(exp(conf)[1:2, ], c(1,1), exp(conf)[3:14, ])\n\n\nHmisc::errbar(x = 1:15, y = exp(params), yplus = exped[, 2], yminus = exped[, 1],\n              log = \"y\", ylab = \"Value\", xlab = \"Question index\", type = \"b\")\ngrid()\nHmisc::errbar(x = 1:15, y = exp(params), yplus = exped[, 2], yminus = exped[, 1],\n              add = TRUE)\n```\n\n::: {.cell-output-display}\n![Confidence bars mixed effects model with uncorrelated random effects.](value-estimation_files/figure-html/fig-conf-uncorrelated-1.png){#fig-conf-uncorrelated width=672}\n:::\n:::\n\n\nThe confidence intervals in the plot are reasonably sized, but remember the $y$-axis is on the log-scale. Let's take a look at the confidence interval for *A Mathematical Theory of Communication* again:\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-19_3091cfb6c2a76e076331edd0ab7e7398'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Confidence interval for Mathematical Theory of Communication with uncorrelated random effects.\"}\nround(exp(confint(mod, method = \"Wald\")[16:29, ])[10, ])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 2.5 % 97.5 % \n    44  10740 \n```\n:::\n:::\n\n\nThe uncertainty of the aggregate value is smaller than that of Gavin's subjective value. But the uncertainty is still very, very large. I think the level of uncertainty is wrong though. Fixing it would probably require a modification of the model to allow for items of different difficulty, or maybe a non-multiplicative error structure. But there is also a counterfactual aspect here. It's hard to say how quickly someone else would've invented information theory weren't it for *A Mathematical Theory*. Different \"concepts\" about counterfactuals could potentially lead to different true $\\beta$s, as some readers consider them and some don't. (See [Linch's comment](https://forum.effectivealtruism.org/posts/hrdxf5qdKmCZNWTvs/valuing-research-works-by-eliciting-comparisons-from-ea))\n\n### Using correlated random effects\n\nWe can run a model with correlated random effects too.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-20_3891a1b2392798e03cdd74bbcbe387f3'}\n\n```{.r .cell-code}\nmod <- pairwise_mixed_model(data_list, fixed = 3, uncorrelated = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nboundary (singular) fit: see help('isSingular')\n```\n:::\n:::\n\n\nThe corresponding plot ([@fig-conf-correlated]) is similar but not indistinguishable from [@fig-conf-uncorrelated]. The confidence intervals appear to smaller, but I don't know if this is an estimation artifact or not. I also don't know which model is better. Or if it will ever matter in practice which you use, but the uncorrelated model is faster to fit, as the correlated takes a couple of seconds. And that might matter in a production setting.\n\n\n::: {.cell hash='value-estimation_cache/html/fig-conf-correlated_3f88a2b26f557ba9907135927d989965'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Defines confidence intervals and estimates used for plotting.\"}\nconf <- confint(mod, method = \"Wald\")[(120 - 13):120, ]\nparams <- c(lme4::fixef(mod)[1:2], 0, lme4::fixef(mod)[3:14])\nexped <- rbind(exp(conf)[1:2, ], c(1,1), exp(conf)[3:14, ])\n\nHmisc::errbar(x = 1:15, y = exp(params), yplus = exped[, 2], yminus = exped[, 1],\n              log = \"y\", ylab = \"Value\", xlab = \"Question index\", type = \"b\")\ngrid()\nHmisc::errbar(x =  1:15, y = exp(params), yplus = exped[, 2], yminus = exped[, 1],\n              add = TRUE)\n```\n\n::: {.cell-output-display}\n![Confidence bars mixed effects model with correlated random effects.](value-estimation_files/figure-html/fig-conf-correlated-1.png){#fig-conf-correlated width=672}\n:::\n:::\n\n\nThe resulting confidence interval for *A Mathematical Theory of Communication* gets smaller now.\n\n\n::: {.cell hash='value-estimation_cache/html/unnamed-chunk-22_bf1eab7adede68238e2a639aa2ad57df'}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Confidence interval for Mathematical Theory of Communication with correlated random effects.\"}\nround(exp(confint(mod, method = \"Wald\")[116, ]))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 2.5 % 97.5 % \n    68   9602 \n```\n:::\n:::\n\n\n## Incorporating uncertainty\n\nInstead of rating the ratio $\\eta_i/\\eta_j$ with a number, you might want give a distribution over $\\eta_i/\\eta_j$, indicating your uncertainty, as done in e.g. [this post](https://forum.effectivealtruism.org/posts/EPhDMkovGquHtFq3h/an-experiment-eliciting-relative-estimates-for-open). How could we work with such uncertain measurements? One possibility is to extract a log-mean and log-standard deviation from the distributions and then use the same method as I've described, but with weighted least squares instead of least squares. The weights will be $1/\\sigma_{ij}$, where $\\sigma_{ij}$ are the log-standard deviations of the distributions.\n\nThe formal reasoning behind this proposal goes as follows. If $\\eta_i/\\eta_j$ is log-normal with some log-mean $\\mu_{ij}$ and standard deviation $\\sigma_{ij}$, its logarithm is normal with mean $\\mu_{ij}$ and standard deviation $\\sigma_{ij}$. This model implies that $$\n\\frac{\\eta_i}{\\eta_j} = e^{\\mu_{ij}}e^{\\sigma_{ij}\\cdot\\epsilon_{ij}},\n\n$$ for some normally distributed $\\epsilon_{ij}$. Taking logarithms on both sides, we obtain $$\n\n\\beta_i - \\beta_j = \\mu_{ij} + \\sigma_{ij}\\epsilon_{ij}.\n\n$$ Since $\\epsilon_{ij}$ is symmetric around $0$, we have $\\mu_{ij} = \\beta_i - \\beta_j + \\sigma_{ij}\\epsilon_{ij}$. If we add the \"safety measure constant\" $\\psi$, with $$\\mu_{ij} = \\beta_i - \\beta_j  + \\psi\\sigma_{ij}\\epsilon_{ij},$$ {#eq-modelsigma_ij} this is a [weighted least squares problem](https://en.wikipedia.org/wiki/Weighted_least_squares), with weights equal to $1/\\sigma_{ij}$ and residual standard deviation $\\psi$. It's not clear to me if distributions are worth it.\n\nIn the summary I wrote that it's not clear to me that it's worth it to ask for distributions in pairwise comparisons, as your uncertainty level can be modeled implicitly by comparing different pairwise comparisons. What does this mean? Let's simplify the model in @eq-modelsigma_ij so it contains two error terms, $\\sigma_i$ and $\\sigma_j$, one belonging to each question.\n\n$$\\mu_{ij} = \\beta_i - \\beta_j + \\sigma_{i}\\epsilon_{i}+\\sigma_{j}\\epsilon_{j}.$$ {#eq-modelsigma_isigma_j}\n\n\nThis models allows you to have different uncertainties for different items, but doesn't allow for idiosyncratic errors depending on interactions between the $i$th and $j$th items. Estimation of the model in @eq-modelsigma_isigma_j easy to do efficiently, but I haven't looked at the details. An idea would be to use the equation $\\operatorname{Var}(\\mu_{ij})=\\sigma_{i}^{2}+\\sigma_{j}^{2}$ and iteratively refit weighted least squares models.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}