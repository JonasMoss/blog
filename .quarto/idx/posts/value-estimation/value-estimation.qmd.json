{"title":"Estimating value from pairwise comparisons","markdown":{"yaml":{"title":"Estimating value from pairwise comparisons","author":"Jonas Moss","format":"html","editor":"visual","date":"10/2/2022","date-format":"MMM D, YYYY","categories":["effective altruism","statistics","psychometrics"]},"headingText":"| echo: false","containsRefs":false,"markdown":"\n\n```{r}\nmake_frame <- function(data, fixed = 3, keep_names = FALSE) {\n  levels <- levels(as.factor(c(data$source, data$target)))\n  data$source <- factor(data$source, levels = levels)\n  data$target <- factor(data$target, levels = levels)\n  data$distance <- as.numeric(data$distance)\n  source <- as.numeric(data$source)\n  target <- as.numeric(data$target)\n\n  k <- length(levels)\n  n <- nrow(data)\n  d <- matrix(data = 0, nrow = n, ncol = k)\n\n  for (i in seq(n)) {\n    d[i, source[i]] <- -1\n    d[i, target[i]] <- 1\n  }\n\n  selection <- setdiff(seq(k), fixed)\n  d_star <- d[, selection]\n  y <- log(as.numeric(data$distance))\n  data_frame <- data.frame(y, d_star)\n  if (keep_names) {\n    colnames(data_frame) <- c(\"distance\", levels[selection])\n  } else {\n    colnames(data_frame) <- c(\"distance\", seq(k)[selection])\n  }\n  data_frame\n}\n\npairwise_mixed_model <- function(data, fixed = 3) {\n  names <- names(data_list)\n  model_list <- lapply(seq_along(data_list), \\(i) {\n    frame <- make_frame(data_list[[i]], fixed)\n    cbind(frame, subject = names[i])\n  })\n  big_frame <- do.call(rbind, model_list)\n  colnames(big_frame) <- c(\n    \"distance\",\n    c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"),\n    \"subject\")\n  mod <- lme4::lmer(distance ~ a + b + c + d + e + f + g +h +i + j + k + l + m + n + 0 +\n               (0 + a|subject) +\n               (0 + b|subject) +\n               (0 + c|subject) +\n               (0 + d|subject) +\n               (0 + e|subject) +\n               (0 + f|subject) +\n               (0 + g|subject) +\n               (0 + h|subject) +\n               (0 + i|subject) +\n               (0 + j|subject) +\n               (0 + k|subject) +\n               (0 + l|subject) +\n               (0 + m|subject) +\n               (0 + n|subject)\n               , data = big_frame, REML = TRUE)\n  mod\n\n}\n\n\npairwise_model <- function(data, fixed = 3, keep_names = FALSE, estimator = lm) {\n  data_frame <- make_frame(data, fixed = fixed, keep_names = keep_names)\n  estimator(distance ~ . - 1, data = data_frame)\n}\n\ndata_list <- list(\n  linch = jsonlite::fromJSON(\"raw_data/linch-zhang.json\"),\n  finn = jsonlite::fromJSON(\"raw_data/finn-moorhouse.json\"),\n  gavin = jsonlite::fromJSON(\"raw_data/gavin-leech-complete.json\"),\n  jamie = jsonlite::fromJSON(\"raw_data/jaime-sevilla.json\"),\n  misha = jsonlite::fromJSON(\"raw_data/misha-yagudin.json\"),\n  ozzie = jsonlite::fromJSON(\"raw_data/ozzie-gooen.json\")\n)\n\n```\n\nHow can you estimate the value of research output? One way is to do pairwise comparisons, e.g., to ask specialists how much more valuable Darwin's *The Original of Species* is than Dembski's [*Intelligent Design*](https://en.wikipedia.org/wiki/Intelligent_Design_(book)). You can use these relative valuations to estimate absolute valuations.\n\n## Summary\n\n1.  Estimating values is hard. One way to elicit value estimates is ask researchers to compare to different items $A$ and $B$, asking how much better $A$ is than $B$. This makes the problem more concrete than just asking \"what is the value of $A$?\". The Quantified Uncertainty Institute has made an app for doing this kind of thing, described [here](https://forum.effectivealtruism.org/posts/9hQFfmbEiAoodstDA/simple-comparison-polling-to-create-utility-functions).\n\n2.  Nuño Sempere had a [post](https://forum.effectivealtruism.org/posts/hrdxf5qdKmCZNWTvs/valuing-research-works-by-eliciting-comparisons-from-ea) about eliciting comparisons of research value from $6$ effective altruism researchers.\n\n3.  This post proposes some technical solutions to problems introduced to me in Nuño's post. In particular, it includes principled ways to\n\n    1.  Estimate subjective values,\n\n    2.  Measure consistency in pairwise value judgments,\n\n    3.  Measure agreement between the raters,\n\n    4.  Aggregate subjective values.\n\n4.  I use these methods on the [data from Nuño's post](https://github.com/quantified-uncertainty/utility-function-extractor/blob/8ce1a4a8572ec692bc82d39a1bd983216fb0f136/data/).\n\nI'm assuming you have read Nuño's post recently. I think this post will be hard to read if you haven't.\n\n***This is written as a self-contained Quarto file. I've hidden most of the `R` code to make it readable, but it's available in [source](https://github.com/JonasMoss/blog/blob/main/posts/value-estimation/value-estimation.qmd).***\n\n### What's this about\n\nThis table contains the $36$ responses from Gavin Leech. As you can see, he values Superintelligence $100$ more than the [Global Priorities Institute's Research Agenda](https://globalprioritiesinstitute.org/research-agenda-web-version/).\n\n```{r}\n#| echo: false\ngavin <- data_list$gavin\nknitr::kable(gavin[, 1:3])\n```\n\nMy first goal is to take relative value judgments such these and use them to estimate the true subjective values. In this case, I want to estimate the value that Gavin Leech places on every item in the table above, i.e.,\n\n```{r}\n#| echo: false\ngavin <- data_list$gavin\nlevels <- levels(as.factor(c(gavin$source, gavin$target)))\nknitr::kable(cbind(1:15, levels))\n```\n\nwhere *Categorizing Variants of Goodhart's Law* has value fixed to $1$. I will use the number scheme above throughout the post.\n\n## A model with multiplicative error terms\n\n### Motivation and setup\n\nLet $\\eta_i$ be the true subjective value of item $i$, counting starting from $1$. We will let $\\eta_3=1$ in our setup, as Manheim and Garabrant's [*Categorizing Variants of Goodhart's Law*](https://arxiv.org/abs/1803.04585) was fixed to $1$ in Nuño's study, but we could have fixed any other item if we wanted to. Ideally, we would have observed the \"distances\" $d_{ij}=\\eta_i/\\eta_j$ directly, but we don't. Instead, we observe the distances with noise, $\\hat{d}_{ij}$. We'll assume a multiplicative model for these noise measurements:\n\n$$\n\\hat{d}_{ij} = \\frac{\\eta_i}{\\eta_j}\\cdot e^{\\sigma \\epsilon_{ij}},\n$$ where $e^{\\sigma \\epsilon_{ij}}$ is a positive noise term with standard deviation $\\sigma$ on the log-scale. Now define $Y_{ij} = \\log \\hat{d}_{ij}$ and $\\beta_i = \\log \\eta_i$. Observe that $\\beta_3 = 0$ by assumption. Now take logarimths on both sides of the equation above to get\n\n$$\nY_{ij} = \\beta_i - \\beta_j + \\sigma\\epsilon_{ij},\n$$\n\nwhich is a linear regression model. It looks like a [two-way analysis of variance](https://en.wikipedia.org/wiki/Two-way_analysis_of_variance), but isn't quite that, as we are only dealing with one factor here (the evaluated research) which appears twice in each equation. That said, the only difficulty in estimating this model is to make a model matrix for the regression coefficients.\n\n### Incidence matrices\n\nThe questions Gavin answered in the table above can be understood as a directed graph; I'll call it the *question graph*. Gavin's question graph can be seen below.\n\n```{r}\n#| echo: false\nsuppressMessages(suppressWarnings(library(\"igraph\")))\n\nlevels <- levels(as.factor(c(gavin$source, gavin$target)))\ngavin$source <- factor(gavin$source, levels = levels)\ngavin$target <- factor(gavin$target, levels = levels)\ngavin$distance <- as.numeric(gavin$distance)\nsource <- as.numeric(gavin$source)\ntarget <- as.numeric(gavin$target)\n\ngraph <- graph_from_edgelist(cbind(source, target))\nplot(graph)\n```\n\nDirected graphs can be defined by their [incidence matrices](https://en.wikipedia.org/wiki/Incidence_matrix#Undirected_and_directed_graphs). If $G$ is a directed graph with $k$ nodes and $n$ edges its incidence matrix $B$ is the $n\\times k$ matrix with elements $$B_{ij}=\\begin{cases}\n-1 & \\text{if edge }e_{j}\\text{ leaves vertex }v_{i},\\\\\n1 & \\text{if edge }e_{j}\\text{ enters vertex }v_{i},\\\\\n0 & \\text{otherwise.}\n\\end{cases}$$\n\nFor instance, Gavin's incidence matrix is\n\n```{r}\n#| echo: false\n\nn <- nrow(gavin)\nk <- 15\nb <- matrix(data = 0, nrow = n, ncol = k)\n\nfor (i in seq(n)) {\n  b[i, source[i]] <- -1\n  b[i, target[i]] <- 1\n}\n\nknitr::kable(t(b))\n```\n\nNow we can verify that $$Y = B^T\\beta + \\sigma \\epsilon.$$ But there is one more thing to handle: We need to remove the fixed $\\beta$, in our case $\\beta_3$, to estimate the model. Define $B_\\star$ and $\\beta_\\star$ as the incidence matrix and coefficient vector with the fixed item removed. Then $Y = B_\\star^T\\beta_\\star + \\sigma \\epsilon$ is ready to be estimated using linear regression.\n\n### Example\n\nWe fit a linear regression to Gavin's data. Here are the resulting estimates on the log-scale, rounded to the nearest whole number.\n\n```{r}\n#| echo: false\nmod <- pairwise_model(gavin, fixed = 3, keep_names = TRUE)\nvals <- round(t(unname(c(coef(mod)[1:2], \n                     c(\"Categorizing Variants of Goodhart's Law\" = 0),\n                     coef(mod)[3:14]))))\ncolnames(vals) <- 1:15\nknitr::kable(vals)\n```\n\nWe can also make confidence intervals for the questions using the `confint` function. Here's a plot showing confidence intervals for all the $\\beta$s along with their estimates $\\hat{\\beta}$.\n\n```{r}\n#| echo: false\nexped = exp(confint(mod))\nconfints = rbind(exped[1:2, ], c(1, 1), exped[3:14, ])\nrownames(confints) <- 1:15\nparams <- setNames(c(coef(mod)[1:2], 1, coef(mod)[3:14]), 1:15)\n\nHmisc::errbar(x = 1:15, y = exp(params), yplus = confints[, 2], yminus = confints[, 1],\n              log = \"y\", ylab = \"Value\", xlab = \"Question index\", type = \"b\")\ngrid()\nHmisc::errbar(x = 1:15, y = exp(params), yplus = confints[, 2], yminus = confints[, 1],\n              add = TRUE)\n```\n\nThe $95\\%$ confidence intervals are approximately equally wide on the log-scale, with the exception of question 3, which is fixed to $1$. Let's take a look at question 11, that of [Shannon's A Mathematical Theory of Communication](https://en.wikipedia.org/wiki/A_Mathematical_Theory_of_Communication). The confidence interval is `(135, 15022)` -- that's wide!\n\n### All the raters\n\nThe raters have IDs given in this table.\n\n```{r}\n#| echo: false\nx <- 1:6\nnames(x) = names(data_list)\nx\n```\n\nWe fit the model for all the raters and plot the resulting estimates.\n\n```{r}\n#| echo: false\nparameters = sapply(\n  data_list,\n  \\(data) {\n    coefs <- exp(coef(pairwise_model(data)))\n    c(coefs[1:2], 1, coefs[3:14])\n  })\nmatplot(parameters, log = \"y\", type = \"b\", ylab = \"Values\")\n```\n\nIt seems that the raters agree quite a bit.\n\n## Measuring agreement\n\nOne of the easiest and most popular ways to measure agreement among two raters is Lin's concordance coefficient (aka quadratically weighted Cohen's kappa). It has an unpublished multirater generalization $$\\frac{1^{T}\\Sigma1-\\text{tr}\\Sigma}{(R-1)\\text{tr}\\Sigma+R^{2}\\left(\\overline{\\mu^{2}}-\\overline{\\mu}^{2}\\right)}$$ Where $\\Sigma$ is the covariance matrix of the estimated log rating, $\\mu_i$ is the mean log rating by the $i$th rater, and $R$ is the number of raters. I can explain the reasoning behind this measure in more detail if you want, but it's the essentially unique extension of Lin's concordance coefficient to multiple raters, as several generalizations yield the same formula. It's bounded above by $1$, which signifies perfect agreement. It's defined in a way that's very similar to the $R^2$, so it's OK to interpret the numbers as you would have interpreted an $R^2$.\n\n```{r}\nconcordance = function(x) {\n  n = nrow(x)\n  r = ncol(x)\n  sigma = cov(x) * (n - 1) / n\n  mu = colMeans(x)\n  trace = sum(diag(sigma))\n  top = sum(sigma) - trace\n  bottom = (r - 1) * trace + r ^ 2 * (mean(mu^2) - mean(mu)^2)\n  top / bottom\n}\nconcordance(log(parameters))\n```\n\nI'm impressed by the level of agreement among the raters.\n\nWe can also construct a matrix of pairwise agreements.\n\n```{r}\nconcordances <- outer(seq(6), seq(6), Vectorize(\\(i,j) concordance(\n  cbind(log(parameters)[, i], log(parameters)[, j]))))\ncolnames(concordances) <- names(x)\nrownames(concordances) <- names(x)\nconcordances\n```\n\nNow we notice, e.g., that (i) Gavin agrees with Misha, (ii) Finn doesn't agree much with anyone, (iii) Ozzie agrees with Jamie.\n\n## Identification of the parameters\n\nThe parameters $\\beta_\\star$ are identified if and only if the question graph is connected. This has the practical consequence that the estimation is guaranteed to work whenever you design the question graph *well enough*. For instance, you do not need to think about avoiding cycles, having only one question per pair, etc.\n\nNow, it should be intuitively clear that $\\beta_\\star$ cannot be identified when the graph fails to be connected, as there is no point(s) anchoring the scale of every $\\beta$. Think about it this way. Suppose $\\beta_{1},\\beta_{2},\\beta_{4}$ form a connected component disconnected from $\\beta_{3}$. If $\\beta_{1},\\beta_{2},\\beta_{4}$ satisfy $Y=B_{[1,2,4]}^{T}\\beta_{[1,2,4]}+\\sigma\\epsilon$, where $[1,2,3]$ denotes the appropriate indexing, then surely $\\gamma_{i}=\\beta_{i}+c$ does so too for any $c$, as every row of $B_\\star^{T}\\beta$ is a difference $\\beta_{i}-\\beta_{j}$, hence $\\gamma_{i}-\\gamma_{j}=\\beta_{i}+c-(\\beta_{j}+c)=\\beta_{i}-\\beta_{j}$. The other way around is slightly trickier. It's a theorem of algebraic graph theory that the rank of $B$ equals $k-c$, where $c$ is the number of connected components. Suppose the graph is connected, so that the rank of $B$ is $k-1$. Since $B$ does not have full rank (i.e., $k$), every row can be written as a linear combination of two other rows. In particular, the row associated with the fixed element can be removed without affecting the rank, hence the rank of $B_\\star$ is $k-1$ too. But there are $k-1$ rows in $B_\\star$, hence $B_\\star$ has full rank. It follows that the parameters are identified.\n\n## Measuring inconsistency\n\nRecall the multiplicative equation for the reported distance: $$D_{ij} = \\frac{X_i}{X_j}\\cdot e^{\\sigma \\epsilon_{ij}}$$ It's clear that the distance will be noise-free if and only if $\\sigma = 0$. Moreover, the distances will behave more and more erratically the larger $\\sigma$ gets. If the distances tend to have erratically, the valuations will be inconsistent. Thus it's natural to consider inconsistency estimators that are strictly increasing functions of $\\sigma$. We'll just use $\\sigma$ for simplicity's sake.\n\nThe consistencies of our 6 player are\n\n```{r}\n#| echo: false\nconsistencies = lapply(data_list, \\(data) summary(pairwise_model(data))$sigma)\nknitr::kable(tibble::as_tibble(consistencies), digits = 2)\n```\n\nAll of these are roughly the same, except Gavin's. That might be surprising since Nuño claimed Gavin is the most consistent of the raters. His inconsistency score is probably unfavourable since he has some serious outliers in his ratings, not because he's inconsistent across the board. Ratings $33$ and $36$ appear to be especially inconsistent.\n\n```{r}\n#| echo: false\nplot(mod, which = 1, main = \"Plot for Gavin\")\n```\n\nCompared it to the same plot for Jaime Sevilla.\n\n```{r}\n#| echo: false\nsevilla <- data_list$jamie\nmod_sevilla <- pairwise_model(sevilla) \nplot(mod_sevilla, which = 1, main = \"Plot for Jaime\")\n```\n\nLet's see what happens if we remove the observations $31, 33, 34, 36$ from Gavin's data then.\n\n```{r}\n#| echo: false\ngavin2 <- data_list$gavin\ngavin2 <- gavin2[setdiff(seq(nrow(gavin2)), c(31, 33, 34, 36)), ]\nmod_gavin2 <- pairwise_model(gavin2) \nplot(mod_gavin2, which = 1, main = \"Plot for Gavin with outliers removed\")\n```\n\nThe residual plot looks better now, and the inconsistency score becomes $\\sigma \\approx 0.87$, in line with the other participants.\n\nMy take-away is that it would be beneficial to use robust linear regressions when estimating $\\beta$. I'm not prioritizing studying this right now, but if someone were to invest serious amount of time in studying and applying statistical methods for this problem, I would strongly suggest taking a look at e.g. `rlm`.\n\n### You shouldn't strive for consistency\n\nStriving for consistency requires you to follow a method. For instance, you can write down or try hard to remember what you have answered on previous questions, then use the right formula to deduce a consistent answer. I would advice against doing this though. When you compare two items against each other, just follow the priming of the shown items and let the statistical method do its work! If you're trying hard to be consistent you'll probably introduce some sort of bias, as you'll essentially make the ratings dependent on their ordering. Also see [the crowd within](https://en.wikipedia.org/wiki/Wisdom_of_the_crowd#Analogues_with_individual_cognition:_the_%22crowd_within%22). The value-elicitation framework is similar to psychometrics, where you want every measurement to be as independent of every other measurement as possible when you condition on the latent variables.\n\nI also see little reason to use algorithms that prohibits cyclical comparisons, as there is no statistical reason to avoid them. (Only a psychological one, if you feel like you have to be consistent.) It's also fine the ask the same question more than once -- at least if you add some addition correlation term into the model. And have some time distance between the questions.\n\n## Aggregation\n\nSuppose the vectors $\\beta_{j}\\sim N(\\beta,\\tau I)$ for some variance parameter $\\tau$. We wish to estimate the global mean $\\beta$. This can be done using mixed effects models. \\begin{eqnarray*}\nY_{j} & = & D_{j}^{T}\\beta_{j}+\\sigma\\epsilon,\\\\\n\\beta_{j} & = & \\beta+\\tau\\delta.\n\\end{eqnarray*}\n\nConceptually, this model implies that there is a true underlying $\\beta$ for each question, but the raters only have incomplete access to it when they form their subjective valuation. So we have two sources of noise: First, the raters have a latent, noisy and subjective estimate of $\\beta$, which we call $\\beta_j$. Second, we only observe noisy measurements of $\\beta_j$s through our pairwise comparisons model.\n\nUsing `lme4` I fit a mixed effects model to the data without an intercept. Check out the source if you want to know exactly what I've done.\n\n```{r}\n#| echo: false\nmod <- pairwise_mixed_model(data, fixed = 2)\nconf <- confint(mod, method = \"Wald\")[16:29, ]\nparams <- lme4::fixef(mod)\nexped <- exp(conf)\n\nHmisc::errbar(x = 1:14, y = exp(params), yplus = exped[, 2], yminus = exped[, 1],\n              log = \"y\", ylab = \"Value\", xlab = \"Question index\", type = \"b\")\ngrid()\nHmisc::errbar(x = 1:14, y = exp(params), yplus = exped[, 2], yminus = exped[, 1],\n              add = TRUE)\n```\n\nThe confidence intervals in the plot are reasonably sized, but remember the $y$-axis is on the log-scale. Let's take a look at the confidence interval for *A Mathematical Theory of Communication* again:\n\n```{r}\n#| echo: false\nround(exp(confint(mod, method = \"Wald\")[16:29, ])[10, ])\n```\n\nThe uncertainty of the aggregate value is smaller than that of Gavin's subjective value. But the uncertainty is still very, very large. I think the level of uncertainty is wrong though. Fixing it would probably require a modification of the model to allow for items of different difficulty, or maybe a non-multiplicative error structure.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"value-estimation.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.0.36","editor":"visual","comments":{"hypothesis":{"theme":"clean","openSidebar":false}},"theme":{"light":"flatly","dark":"darkly","css":"../../styles.css"},"title-block-banner":true,"title":"Estimating value from pairwise comparisons","author":"Jonas Moss","date":"10/2/2022","date-format":"MMM D, YYYY","categories":["effective altruism","statistics","psychometrics"]},"extensions":{"book":{"multiFile":true}}}}}